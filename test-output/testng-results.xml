<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="31" passed="26" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-13T14:10:21 IST" name="IDEAL" finished-at="2022-12-13T14:12:08 IST" duration-ms="107151">
    <groups>
    </groups>
    <test started-at="2022-12-13T14:10:21 IST" name="agencyapi" finished-at="2022-12-13T14:12:08 IST" duration-ms="107151">
      <class name="com.qa.tests.PostAPItest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:21 IST" name="setup" finished-at="2022-12-13T14:10:21 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Assume_get_access_token()[pri:1, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:21 IST" name="Assume_get_access_token" finished-at="2022-12-13T14:10:25 IST" duration-ms="4328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assume_get_access_token -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:25 IST" name="setup" finished-at="2022-12-13T14:10:25 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Assume_Individuo_Certificate()[pri:2, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:25 IST" name="Assume_Individuo_Certificate" finished-at="2022-12-13T14:10:36 IST" duration-ms="10449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assume_Individuo_Certificate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:36 IST" name="setup" finished-at="2022-12-13T14:10:36 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Assume_Patroons_Certificate()[pri:3, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:36 IST" name="Assume_Patroons_Certificate" finished-at="2022-12-13T14:10:43 IST" duration-ms="6666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assume_Patroons_Certificate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:43 IST" name="setup" finished-at="2022-12-13T14:10:43 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CFSE_Test_get_access_token()[pri:4, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:43 IST" name="CFSE_Test_get_access_token" finished-at="2022-12-13T14:10:44 IST" duration-ms="1815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CFSE_Test_get_access_token -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:44 IST" name="setup" finished-at="2022-12-13T14:10:44 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CFSE_get_informacionDeDeauda()[pri:5, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:10:44 IST" name="CFSE_get_informacionDeDeauda" finished-at="2022-12-13T14:11:01 IST" duration-ms="17127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CFSE_get_informacionDeDeauda -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:01 IST" name="setup" finished-at="2022-12-13T14:11:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CFSE_get_certificacionDeDeauda()[pri:6, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:01 IST" name="CFSE_get_certificacionDeDeauda" finished-at="2022-12-13T14:11:03 IST" duration-ms="1709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CFSE_get_certificacionDeDeauda -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:03 IST" name="setup" finished-at="2022-12-13T14:11:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CFSE_get_certificacionDeVegencia()[pri:7, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:03 IST" name="CFSE_get_certificacionDeVegencia" finished-at="2022-12-13T14:11:05 IST" duration-ms="1350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CFSE_get_certificacionDeVegencia -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:05 IST" name="setup" finished-at="2022-12-13T14:11:05 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CFSE_get_fondoPing()[pri:8, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:05 IST" name="CFSE_get_fondoPing" finished-at="2022-12-13T14:11:06 IST" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CFSE_get_fondoPing -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:06 IST" name="setup" finished-at="2022-12-13T14:11:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Estado_Compliance()[pri:9, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:06 IST" name="Estado_Compliance" finished-at="2022-12-13T14:11:07 IST" duration-ms="1381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Estado_Compliance -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:07 IST" name="setup" finished-at="2022-12-13T14:11:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Estado_Ping()[pri:10, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:07 IST" name="Estado_Ping" finished-at="2022-12-13T14:11:08 IST" duration-ms="983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Estado_Ping -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:08 IST" name="setup" finished-at="2022-12-13T14:11:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Estado_Certificado()[pri:11, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:08 IST" name="Estado_Certificado" finished-at="2022-12-13T14:11:20 IST" duration-ms="12036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Estado_Certificado -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:20 IST" name="setup" finished-at="2022-12-13T14:11:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Hacienda_corporate_ping()[pri:12, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:20 IST" name="Hacienda_corporate_ping" finished-at="2022-12-13T14:11:22 IST" duration-ms="2087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hacienda_corporate_ping -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:22 IST" name="setup" finished-at="2022-12-13T14:11:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Hacienda_corporate_compliance()[pri:13, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:22 IST" name="Hacienda_corporate_compliance" finished-at="2022-12-13T14:11:25 IST" duration-ms="2153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hacienda_corporate_compliance -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:25 IST" name="setup" finished-at="2022-12-13T14:11:25 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Hacienda_corporate_authorize()[pri:14, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:25 IST" name="Hacienda_corporate_authorize" finished-at="2022-12-13T14:11:29 IST" duration-ms="4038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hacienda_corporate_authorize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:29 IST" name="setup" finished-at="2022-12-13T14:11:29 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Hacienda_Corporate_complianceDocuments()[pri:15, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:29 IST" name="Hacienda_Corporate_complianceDocuments" finished-at="2022-12-13T14:11:30 IST" duration-ms="1603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hacienda_Corporate_complianceDocuments -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:30 IST" name="setup" finished-at="2022-12-13T14:11:30 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Hacienda_individual_ping()[pri:16, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:30 IST" name="Hacienda_individual_ping" finished-at="2022-12-13T14:11:32 IST" duration-ms="1674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hacienda_individual_ping -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:32 IST" name="setup" finished-at="2022-12-13T14:11:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Hacienda_authorize_individual()[pri:17, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:32 IST" name="Hacienda_authorize_individual" finished-at="2022-12-13T14:11:34 IST" duration-ms="2544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hacienda_authorize_individual -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:34 IST" name="setup" finished-at="2022-12-13T14:11:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Hacienda_complianceDocuments_ind()[pri:18, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:34 IST" name="Hacienda_complianceDocuments_ind" finished-at="2022-12-13T14:11:45 IST" duration-ms="10572" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[status code is not 200 expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: status code is not 200 expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at com.qa.tests.PostAPItest.Hacienda_complianceDocuments_ind(PostAPItest.java:983)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hacienda_complianceDocuments_ind -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:45 IST" name="setup" finished-at="2022-12-13T14:11:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="PostAPITest_cap_request()[pri:19, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:45 IST" name="PostAPITest_cap_request" finished-at="2022-12-13T14:11:48 IST" duration-ms="2721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostAPITest_cap_request -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:48 IST" name="setup" finished-at="2022-12-13T14:11:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="PostAPITest_Retrieve()[pri:20, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:48 IST" name="PostAPITest_Retrieve" finished-at="2022-12-13T14:11:51 IST" duration-ms="2983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostAPITest_Retrieve -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:51 IST" name="setup" finished-at="2022-12-13T14:11:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="PostAPITest_Justicia_Validate()[pri:21, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:51 IST" name="PostAPITest_Justicia_Validate" finished-at="2022-12-13T14:11:54 IST" duration-ms="3047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostAPITest_Justicia_Validate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:54 IST" name="setup" finished-at="2022-12-13T14:11:54 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="PostAPITest_Justicia_CriminalRecord_CheckInquiry()[pri:22, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:54 IST" name="PostAPITest_Justicia_CriminalRecord_CheckInquiry" finished-at="2022-12-13T14:11:54 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Illegal character in path at index 48: https://suri.cjis.pr.gov/identity/criminal/check]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Illegal character in path at index 48: https://suri.cjis.pr.gov/identity/criminal/check
at java.base/java.net.URI.create(URI.java:906)
at org.apache.http.client.methods.HttpGet.<init>(HttpGet.java:66)
at com.qa.client.RestClient.get(RestClient.java:43)
at com.qa.tests.PostAPItest.PostAPITest_Justicia_CriminalRecord_CheckInquiry(PostAPItest.java:1169)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.net.URISyntaxException: Illegal character in path at index 48: https://suri.cjis.pr.gov/identity/criminal/check
at java.base/java.net.URI$Parser.fail(URI.java:2974)
at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
at java.base/java.net.URI$Parser.parseHierarchical(URI.java:3227)
at java.base/java.net.URI$Parser.parse(URI.java:3175)
at java.base/java.net.URI.<init>(URI.java:623)
at java.base/java.net.URI.create(URI.java:904)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostAPITest_Justicia_CriminalRecord_CheckInquiry -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:54 IST" name="setup" finished-at="2022-12-13T14:11:54 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Crim360_Authenticate()[pri:24, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:54 IST" name="Crim360_Authenticate" finished-at="2022-12-13T14:11:56 IST" duration-ms="1739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Crim360_Authenticate -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:56 IST" name="setup" finished-at="2022-12-13T14:11:56 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CRIM360_Certification()[pri:25, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:56 IST" name="CRIM360_Certification" finished-at="2022-12-13T14:11:58 IST" duration-ms="2880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CRIM360_Certification -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:58 IST" name="setup" finished-at="2022-12-13T14:11:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CRIM360_Crimcompliance()[pri:26, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:11:58 IST" name="CRIM360_Crimcompliance" finished-at="2022-12-13T14:12:00 IST" duration-ms="1380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CRIM360_Crimcompliance -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:12:00 IST" name="setup" finished-at="2022-12-13T14:12:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="CRIM360_FileContent()[pri:27, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:12:00 IST" name="CRIM360_FileContent" finished-at="2022-12-13T14:12:03 IST" duration-ms="3395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CRIM360_FileContent -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:12:03 IST" name="setup" finished-at="2022-12-13T14:12:03 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="DTOP_token()[pri:28, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:12:03 IST" name="DTOP_token" finished-at="2022-12-13T14:12:05 IST" duration-ms="1757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DTOP_token -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:12:05 IST" name="setup" finished-at="2022-12-13T14:12:05 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="get_DTOPGetPhoto()[pri:29, instance:com.qa.tests.PostAPItest@1b6e1eff]" started-at="2022-12-13T14:12:05 IST" name="get_DTOPGetPhoto" finished-at="2022-12-13T14:12:08 IST" duration-ms="3053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_DTOPGetPhoto -->
      </class> <!-- com.qa.tests.PostAPItest -->
    </test> <!-- agencyapi -->
  </suite> <!-- IDEAL -->
</testng-results>
